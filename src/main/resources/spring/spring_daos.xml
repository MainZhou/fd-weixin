<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.boyoi.base.dao" />
    <context:component-scan base-package="com.boyoi.core.dao" />
    <context:component-scan base-package="com.boyoi.work.dao" />

    <context:property-placeholder location='classpath:jdbc.properties' ignore-unresolvable="true"/>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true" />
    </bean>

	<!-- dataSource数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxActive" value="${druid.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.timeout}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x' from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小,如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

        <!-- 打开监控 -->
        <!--<property name="filters" value="log4j" />-->
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="stat-filter" />-->
            <!--</list>-->
        <!--</property>-->

	</bean>


	<!-- 与Mybatis整合 -->
	<!-- session工厂,必须加dataSource -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/boyoi/*/dao/impl/*-map.xml" />
		<!-- 这个包下面的类默认生成一个别名 -->
		<property name="typeAliasesPackage" value="com.boyoi.base.domain,com.boyoi.work.domain" />
	</bean>
	<!-- spring与mybatis整合配置，扫描所有dao,根据接口和mapper生成实例 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.boyoi.base.dao,com.boyoi.work.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 声明目标方法中哪些方法需要事务，哪些不需要事务 -->
	<tx:advice transaction-manager="transactionManager" id="tx">
		<tx:attributes>
			<!-- name为那些方法要开启事务，isolation为隔离级别 ，propagation为传播机制 -->
            <tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
            <tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
            <tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
            <tx:method name="edit*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
            <tx:method name="del*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
            <tx:method name="exec*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
            <!-- 增，删，改以外的方法使用了read-only(只读事务)属性可优化系统性能 -->
            <!--<tx:method name="*" read-only="true"/>-->
		</tx:attributes>
	</tx:advice>

	<!-- 切面配置 -->
	<aop:config>
		<!-- 表达式 -->
		<aop:pointcut expression="execution(* com.boyoi.*.service.*.*(..))" id="preform" />
		<!-- 引用的事务 -->
		<aop:advisor advice-ref="tx" pointcut-ref="preform" />
	</aop:config>

</beans>