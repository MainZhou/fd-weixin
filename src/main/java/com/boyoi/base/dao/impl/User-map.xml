<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boyoi.base.dao.UserDao">

    <resultMap type="User" id="UserMap" autoMapping="true">
        <id column="guid" property="guid"/>
        <association property="department" javaType="Department" autoMapping="true">
            <id column="departmentId" property="guid"/>
        </association>
        <collection property="roles" ofType="Role">
            <id property="guid" column="roleId"/>
            <result property="roleName" column="roleName"/>
        </collection>
    </resultMap>

    <!-- 添加一个实体的公共实现 -->
    <insert id="add" parameterType="User">
        insert into tsys_user
        (guid,loginName,password,realName,sex,userStatus,telephone,email,jobNum,manageArea,entryDate,post,addr,postName,departmentId,customId)
        values
        <choose>
            <when test="customInfo.guid == ''">
                (#{guid},#{loginName},#{password},#{realName},#{sex},#{userStatus},#{telephone},#{email},#{jobNum},#{manageArea},#{entryDate},#{post},#{addr},#{postName},#{department.guid},null)
            </when>
            <otherwise>
                (#{guid},#{loginName},#{password},#{realName},#{sex},#{userStatus},#{telephone},#{email},#{jobNum},#{manageArea},#{entryDate},#{post},#{addr},#{postName},#{department.guid},#{customInfo.guid})
            </otherwise>
        </choose>
    </insert>

    <!-- 批量添加实体List集合的公共实现 -->
    <insert id="addBatch" parameterType="list">
        insert into tsys_user
        (guid,loginName,password,realName,sex,userStatus,telephone,email,jobNum,manageArea,entryDate,post,addr,postName,departmentId)
        values
        <foreach collection="list" item="item" index="index" separator=" " >
            (#{guid},#{loginName},#{password},#{realName},#{sex},#{userStatus},#{telephone},#{email},#{jobNum},#{manageArea},#{entryDate},#{post},#{addr},#{postName},#{department.guid})
        </foreach>
    </insert>

    <!-- 添加用户对应的角色 -->
    <insert id="addRole">
        insert into tsys_user_role
        (guid, userId, roleId)
        values
        (#{param1}, #{param2},#{param3})
    </insert>
    

    <!-- 通过ID查找实体的公共实现 -->
    <select id="findById" resultMap="UserMap">
        select tableAlias.*,department.guid as departmentId,department.deptName
        from tsys_user tableAlias
        left join tsys_department department on tableAlias.departmentId = department.guid
        where tableAlias.GUID=#{guid}
    </select>

    <!-- 查找所有实体的公共实现 -->
    <select id="findAll" resultMap="UserMap">
        select * from tsys_user
    </select>

    <!-- 条件查询 -->
    <select id="findByCondition" resultMap="UserMap">
        select tableAlias.*, department.guid departmentId, department.deptName
        from tsys_user tableAlias
        left join tsys_department department on tableAlias.departmentId = department.guid
        <where>
        	<!-- 用map是没有百分号的，用map2是有百分号的，只管用就是 -->
        	
            <if test="null != map['realName'] and '' != map['realName']">
                realName like '%${map['realName']}%' or loginName like '%${map['realName']}%'
            </if>
            <if test="null != map['department.guid'] and '' != map['department.guid']">
               AND department.guid = '${map2['department.guid']}'
            </if>
            <if test="null != map['telephone'] and '' != map['telephone']">
                AND tableAlias.telephone like '%${map['telephone']}%'
            </if>
            <if test="null != map['userStatus'] and '' != map['userStatus']">
                AND tableAlias.userStatus = '${map2['userStatus']}'
            </if>
        </where>
        <choose>
            <when test="null != sort and '' != sort and null != order and '' != order">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by tableAlias.operationTime desc
            </otherwise>
        </choose>
    </select>

    <!-- 根据实体进行唯一性判断 -->
    <select id="findByDomain" resultMap="UserMap">
        select * from tsys_user tableAlias
        <where>
            <if test="null != guid and '' != guid">guid != #{guid}</if>
            <if test="null != loginName and '' != loginName"> AND loginName=#{loginName}</if>
            <if test="null != password and '' != password"> AND password=#{password}</if>
            <if test="null != realName and '' != realName"> AND realName=#{realName}</if>
            <if test="null != sex and '' != sex"> AND sex=#{sex}</if>
            <if test="null != userStatus and '' != userStatus"> AND userStatus=#{userStatus}</if>
            <if test="null != telephone and '' != telephone"> AND telephone=#{telephone}</if>
            <if test="null != email and '' != email"> AND email=#{email}</if>
            <if test="null != jobNum and '' != jobNum"> AND jobNum=#{jobNum}</if>
            <if test="null != manageArea and '' != manageArea"> AND manageArea=#{manageArea}</if>
            <if test="null != entryDate and '' != entryDate"> AND entryDate=#{entryDate}</if>
            <if test="null != post and '' != post"> AND post=#{post}</if>
            <if test="null != addr and '' != addr"> AND addr=#{addr}</if>
            <if test="null != postName and '' != postName"> AND postName=#{postName}</if>
            <if test="null != department and '' != department.guid"> AND departmentId=#{department.guid}</if>
            
        </where>
    </select>

    <select id="findUserByUsernamePwd" parameterType="User" resultMap="UserMap">
        select guid,loginName,realName,sex,userStatus,telephone,email,jobNum,manageArea,entryDate,post,addr,postName,departmentId
        from tsys_user u
        where u.loginName=#{loginName}
        and u.password=#{password}
        and u.userStatus='A'
    </select>

    <select id="findUserByUsername" parameterType="string" resultMap="UserMap">
        select u.*,
        role.guid as roleId, role.roleName as roleName,
        department.guid as departmentId, department.deptName
        from tsys_user u
        left join tsys_user_role userRole on u.guid = userRole.userId
        left join tsys_role role on role.guid = userRole.roleId
        left join tsys_department department on u.departmentId = department.guid
        where u.loginName=#{loginName}
    </select>

    <!-- 查找没有授权的角色 -->
    <select id="findNoGranRoleByUserId" resultType="com.boyoi.base.domain.Role">
        select role.* from tsys_role role
        where role.guid not in (select roleId from tsys_user_role where userId=#{userId})
    </select>

    <select id="findGranRoleByUserId" resultType="com.boyoi.base.domain.Role">
        select role.* from tsys_role role,tsys_user_role ur
        where role.guid = ur.roleId and ur.userId = #{userId}
    </select>


    <!-- 获得用户授权后的菜单 -->
    <select id="findMenuByUserId" resultMap="com.boyoi.base.dao.MenuDao.MenuMap">
        select menu.*,
        parentMenu.guid as parentMenuId,
        parentMenu.menuName as parentMenuName,
        parentIcon.guid as parentIconId,
        parentIcon.cssName as parentIconCssName,
        icon.guid as iconId,
        icon.cssName as cssName
        from
        tsys_user_role userRole, tsys_role_module roleModule, tsys_module module , tsys_menu menu
        left join tsys_menu parentMenu on menu.parentId = parentMenu.guid
        left join tsys_icon icon on menu.iconId = icon.guid
        left join tsys_icon parentIcon on parentMenu.iconId = parentIcon.guid
        where
        userRole.userId = #{userId}
        and userRole.roleId = roleModule.roleId
        and roleModule.moduleId = module.guid
        and module.menuId = menu.guid
        order by parentMenu.sortNum desc, menu.sortNum desc
    </select>

    <!-- 更新实体的公共实现 -->
    <update id="update" parameterType="User">
        update tsys_user tableAlias
        set
        loginName=#{loginName},
        <if test="null != password and '' != password">PASSWORD=#{password},</if>
        realName=#{realName},
        sex=#{sex},
        userStatus=#{userStatus},
        telephone=#{telephone},
        email=#{email},
        jobNum=#{jobNum},
        manageArea=#{manageArea},
        entryDate=#{entryDate},
        post=#{post},
        addr=#{addr},
        postName=#{postName},
        operationTime=now(),
        departmentId=#{department.guid}
        <if test="null != customInfo and '' != customInfo.guid">,customId=#{customInfo.guid}</if>
        where guid=#{guid}
    </update>

    <!-- 更新实体的公共实现(为Null或"" 不更新该字段) -->
    <update id="updateByNotEmpty" parameterType="User">
        update tsys_user tableAlias
        <set>
            <if test="null != guid and '' != guid">guid=#{guid},</if>
            <if test="null != loginName and '' != loginName">loginName=#{loginName},</if>
            <if test="null != password and '' != password">password=#{password},</if>
            <if test="null != realName and '' != realName">realName=#{realName},</if>
            <if test="null != sex and '' != sex">sex=#{sex},</if>
            <if test="null != userStatus and '' != userStatus">userStatus=#{userStatus},</if>
            <if test="null != telephone and '' != telephone">telephone=#{telephone},</if>
            <if test="null != email and '' != email">email=#{email},</if>
            <if test="null != jobNum and '' != jobNum">jobNum=#{jobNum},</if>
            <if test="null != manageArea and '' != manageArea">manageArea=#{manageArea},</if>
            <if test="null != entryDate and '' != entryDate">entryDate=#{entryDate},</if>
            <if test="null != post and '' != post">post=#{post},</if>
            <if test="null != addr and '' != addr">addr=#{addr},</if>
            <if test="null != postName and '' != postName">postName=#{postName},</if>
            <if test="null != customStyle and '' != customStyle">customStyle=#{customStyle},</if>
            <if test="null != department and '' != department.guid">departmentId=#{department.guid}</if>
            
        </set>
        where guid=#{guid}
    </update>

    <!-- 修改密码 -->
    <update id="changePassword">
        update tsys_user
        set
        <if test="null != password and '' != password">
            password=#{password}
        </if>
        where guid=#{guid}
    </update>

    <!-- 设置认证密码 -->
    <update id="setAuthPassword">
        update tsys_user
        set
        authPassword=#{param1}
        where guid=#{param2}
    </update>

    <!-- 获得认证密码是否存在 -->
    <select id="findAuthPassword" resultType="int">
        select count(1) from tsys_user
        where authPassword=#{param1}
        and guid=#{param2}
    </select>

    <!-- 通过实体，取出id,删除对应的实体的公共实现 -->
    <delete id="del">
        delete from tsys_user
        where
        guid=#{guid}
    </delete>

    <!-- 批量删除的公共实现 -->
    <delete id="delBatch" parameterType="list">
        delete from tsys_user
        where
        guid in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 删除用户对应的角色 -->
    <delete id="delRole">
        delete from tsys_user_role
        where userId=#{param1} and roleId=#{param2}
    </delete>

    <select id="findUserByRole" resultMap="UserMap">
        select * from tsys_user where guid in
          (select userId from tsys_user_role where roleId in
            (select guid from tsys_role ur where ur.roleName='业务员'))
    </select>
</mapper>