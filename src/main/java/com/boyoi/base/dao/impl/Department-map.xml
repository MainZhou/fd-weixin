<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boyoi.base.dao.DepartmentDao">

    <resultMap type="Department" id="DepartmentMap" autoMapping="true">
        <id property="guid" column="guid"/>
        <association property="parentDept" javaType="Department">
            <id property="guid" column="pid"/>
            <result property="deptName" column="parentName"/>
        </association>
    </resultMap>

    <!-- 添加一个实体的公司实现 -->
    <insert id="add" parameterType="Department">
        insert into tsys_department
        (guid,deptName,deptCode,deptStatus,parentId,deptAddr)
        values
        (#{guid},#{deptName},#{deptCode},#{deptStatus},#{parentDept.guid},#{deptAddr})
    </insert>

    <!-- 通过ID查找实体的公共实现 -->
    <select id="findById" resultMap="DepartmentMap">
        select tableAlias.*, parent.guid as pid, parent.deptName as parentName
        from tsys_department tableAlias
        left join tsys_department parent on parent.guid = tableAlias.parentId
        where tableAlias.guid=#{guid}
    </select>

    <!-- 查找所有实体的公共实现 -->
    <select id="findAll" resultMap="DepartmentMap">
        select tableAlias.*, parent.guid as pid, parent.deptName as parentName
        from tsys_department tableAlias
        left join tsys_department parent on parent.guid = tableAlias.parentId
    </select>

    <!-- 条件查询 -->
    <select id="findByCondition" resultMap="DepartmentMap">
        select tableAlias.*, parent.guid as pid, parent.deptName as parentName
        from tsys_department tableAlias
        left join tsys_department parent on parent.guid = tableAlias.parentId
        <where>
            <foreach item="item" index="key" collection="map"
                     open="" separator=" AND " close="">
                <choose>
                    <when test="key == 'guid'">
                        tableAlias.${key} in ${map2.guid}
                    </when>
                    <otherwise>
                        ${key} like #{item}
                    </otherwise>
                </choose>

            </foreach>
        </where>
        <choose>
            <when test="null != sort and '' != sort and null != order and '' != order">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by tableAlias.operationTime desc
            </otherwise>
        </choose>
    </select>

    <!-- 根据实体进行唯一性判断 -->
    <select id="findByDomain" resultType="Department">
        select * from tsys_department tableAlias
        <where>
            <if test="null != guid and '' != guid">GUID != #{guid}</if>
            <if test="null != deptName and '' != deptName"> AND deptName=#{deptName}</if>
            <if test="null != deptCode and '' != deptCode"> AND deptCode=#{deptCode}</if>
            <if test="null != deptStatus and '' != deptStatus"> AND deptStatus=#{deptStatus}</if>
            <if test="null != parentDept and '' == parentDept.guid"> AND parentId is null</if>
            <if test="null != parentDept and '' != parentDept.guid"> AND parentId=#{parentDept.guid}</if>
            <if test="null != deptAddr and '' != deptAddr"> AND deptAddr=#{deptAddr}</if>

        </where>
    </select>

    <!-- 查找子部门 -->
    <select id="findSubDeptByParentId"  parameterType="string" resultMap="DepartmentMap">
        select * from tsys_department tableAlias
        where parentId = #{parentId}
    </select>

    <!-- 更新实体的公共实现 -->
    <update id="update" parameterType="Department">
        update tsys_department tableAlias
        set
        deptName=#{deptName},
        deptCode=#{deptCode},
        deptStatus=#{deptStatus},
        parentId=#{parentDept.guid},
        deptAddr=#{deptAddr},
        operationTime=now()

        where guid=#{guid}
    </update>

    <!-- 更新实体的公共实现(为Null或"" 不更新该字段) -->
    <update id="updateByNotEmpty" parameterType="Department">
        update tsys_department tableAlias
        <set>
            <if test="null != guid and '' != guid">GUID=#{guid},</if>
            <if test="null != deptName and '' != deptName">deptName=#{deptName},</if>
            <if test="null != deptCode and '' != deptCode">deptCode=#{deptCode},</if>
            <if test="null != deptStatus and '' != deptStatus">deptStatus=#{deptStatus},</if>
            <if test="null != parentId and '' != parentId">parentId=#{parentDept.guid},</if>
            <if test="null != deptAddr and '' != deptAddr">deptAddr=#{deptAddr}</if>

        </set>
        where guid=#{guid}
    </update>

    <!-- 通过实体，取出id,删除对应的实体的公共实现 -->
    <delete id="del">
        delete from tsys_department
        where
        guid=#{guid}
    </delete>

    <!-- 批量删除的公共实现 -->
    <delete id="delBatch" parameterType="list">
        delete from tsys_department
        where
        guid in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>