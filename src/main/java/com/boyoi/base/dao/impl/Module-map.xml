<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boyoi.base.dao.ModuleDao">

    <resultMap type="Module" id="ModuleMap" autoMapping="true">
        <id property="guid" column="guid"/>
        <association property="menu" javaType="Menu">
            <id property="guid" column="currMenuId"/>
            <result property="menuName" column="menuName"/>
            <association property="parentMenu" javaType="Menu">
                <id property="guid" column="parentMenuId"/>
                <result property="menuName" column="parentMenuName"/>
            </association>
        </association>
        <collection property="urls" ofType="ModuleUrl">
            <result property="url" column="url"/>
        </collection>
    </resultMap>

    <!-- 添加一个实体的公共实现 -->
    <insert id="add" parameterType="Module">
        insert into tsys_module
        (guid,moduleName,intro,menuId)
        values
        (#{guid},#{moduleName},#{intro},
        <choose>
            <when test="menu != null and '' != menu.guid "> #{menu.guid}</when>
            <when test="menu.parentMenu != null and '' != menu.parentMenu.guid "> #{menu.parentMenu.guid}</when>
            <otherwise> null</otherwise>
        </choose>
        )
    </insert>

    <!-- 批量添加实体List集合的公共实现 -->
    <insert id="addBatch" parameterType="list">
        insert into tsys_module
        (guid,moduleName,intro,menuId)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{guid},#{moduleName},#{intro},#{menuId})
        </foreach>
    </insert>

    <!-- 添加模块-userPostUrl 到数据库中 -->
    <insert id="addModuleUrls">
        insert into tsys_module_url (guid, moduleId, url)
        values
        <foreach collection="urls" item="item" index="index" separator="," >
            (uuid(), #{guid}, #{item.url})
        </foreach>
    </insert>
    

    <!-- 通过ID查找实体的公共实现 -->
    <select id="findById" resultMap="ModuleMap">
        select tableAlias.*,
        menu.guid as currMenuId,
        menu.menuName as menuName,
        mu.url url,
        parentMenu.guid as parentMenuId, parentMenu.menuName as parentMenuName
        from tsys_module tableAlias
        left join tsys_menu menu on menu.guid = tableAlias.menuId
        left join tsys_menu parentMenu on menu.parentId = parentMenu.guid
        left join tsys_module_url mu on mu.moduleId = #{guid}
        where tableAlias.guid = #{guid}
    </select>

    <!-- 查找所有实体的公共实现 -->
    <select id="findAll" resultMap="ModuleMap">
        select * from tsys_module
    </select>

    <!-- 条件查询 -->
    <select id="findByCondition" resultMap="ModuleMap">
        select tableAlias.*, menu.guid currMenuId, menu.menuName
        from tsys_module tableAlias
        left join tsys_menu menu on menu.guid = tableAlias.menuId
        <where>
            <foreach item="item" index="key" collection="map"
                     open="" separator=" AND " close="">${key} like #{item}
            </foreach>
        </where>
        <if test="null != sort and '' != sort and null != order and '' != order">
            order by ${sort} ${order}
        </if>
    </select>

    <!-- 根据实体进行唯一性判断 -->
    <select id="findByDomain" resultMap="ModuleMap">
        select * from tsys_module tableAlias
        <where>
            <if test="null != guid and '' != guid">GUID != #{guid}</if>
            <if test="null != moduleName and '' != moduleName"> AND moduleName=#{moduleName}</if>
            <if test="null != intro and '' != intro"> AND intro=#{intro}</if>
            <if test="null != menu and '' != menu.guid"> AND menuId=#{menu.guid}</if>
            
        </where>
    </select>

    <!-- 更新实体的公共实现 -->
    <update id="update" parameterType="Module">
        update tsys_module tableAlias
        set
        moduleName=#{moduleName},
        intro=#{intro},
        menuId=
        <choose>
            <when test="null != menu and '' != menu.guid "> #{menu.guid}</when>
            <when test="null != menu and null != menu.parentMenu and '' != menu.parentMenu.guid "> #{menu.parentMenu.guid}</when>
            <otherwise> null</otherwise>
        </choose>
        
        where guid=#{guid}
    </update>

    <!-- 更新实体的公共实现(为Null或"" 不更新该字段) -->
    <update id="updateByNotEmpty" parameterType="Module">
        update tsys_module tableAlias
        <set>
            <if test="null != guid and '' != guid">guid=#{guid},</if>
            <if test="null != moduleName and '' != moduleName">moduleName=#{moduleName},</if>
            <if test="null != intro and '' != intro">intro=#{intro},</if>
            <if test="null != menu and '' != menu.guid">menuId=#{menu.guid}</if>
            
        </set>
        where guid=#{guid}
    </update>

    <!-- 通过实体，取出id,删除对应的实体的公共实现 -->
    <delete id="del">
        delete from tsys_module
        where
        guid=#{guid}
    </delete>

    <!-- 批量删除的公共实现 -->
    <delete id="delBatch" parameterType="list">
        delete from tsys_module
        where
        guid in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 通过模块删除对应的URL -->
    <delete id="delModuleUrls">
        delete from tsys_module_url
        where
        moduleId = #{guid}
    </delete>

</mapper>